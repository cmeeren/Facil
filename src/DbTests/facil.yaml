configs:
  - appSettings: appsettings.json
  - envVars: ""

rulesets:
  - connectionString: $(connectionString)
    filename: DbGen.fs
    namespaceOrModuleDeclaration: module DbGen

    scriptBasePath: SQL

    prelude: |
      module MyPreludeModule =
        let x = 2


    procedures:
      - include: .*

      - for: WithoutDto
        result: anonymous

      - for: ProcVoptionIn
        voptionIn: true

      - for: ProcVoption.*Out
        voptionOut: true

      - for: ProcWithSingleRecordCol
        recordIfSingleCol: true

      - for: ProcWithOverriddenDtoParamName
        params:
          nameToBeOverridden:
            dtoName: newDtoParamName

      - for: RetVal
        useReturnValue: true

      - for: RetValVoption
        voptionIn: true
        voptionOut: true

      - for: ProcWithSkippedUnsupportedColumn
        columns:
          UnsupportedCol:
            skip: true

      - for: ProcColumnInh.ritance
        columns:
          "":
            skip: true
          Col1:
            skip: false
          Col4:
            skip: false

      - for: ProcColumnInheritance
        columns:
          Col2:
            skip: false
          Col4:
            skip: true

      - for: ProcNominalResult
        result: nominal


    scripts:
      - include: "**/*.sql"
        except: "TempTableDefinitions/**/*.sql"

      - for: "**/*WithoutDto.sql"
        result: anonymous

      - for: ParamsUsedTwice.sql
        params:
          col1:
            nullable: true
            type: NVARCHAR(50)

      - for: SkippedUnsupportedColumn.sql
        columns:
          UnsupportedCol:
            skip: true

      - for: ParamInh*ritance.sql
        params:
          "":
            type: INT
            nullable: true
          col2:
            nullable: false

      - for: ParamInheritance.sql
        params:
          col2:
            type: BIGINT
          col3:
            type: BIT

      - for: ColumnInh*ritance.sql
        columns:
          "":
            skip: true
          Col1:
            skip: false
          Col4:
            skip: false

      - for: ColumnInheritance.sql
        columns:
          Col2:
            skip: false
          Col4:
            skip: true

      - for: UserDefinedTableType.sql
        params:
          tvp:
            type: dbo.MultiColNull

      - for: Voption/In.sql
        voptionIn: true
        params:
          param1:
            nullable: true
            type: NVARCHAR(50)

      - for: Voption/Out.sql
        voptionOut: true
        params:
          param1:
            nullable: true
            type: NVARCHAR(50)

      - for: Voption/TableOutWithDto.sql
        voptionOut: true

      - for: Voption/TableOutWithoutDto.sql
        voptionOut: true

      - for: Voption/TvpInOut.sql
        voptionOut: true
        params:
          tvp:
            type: dbo.MultiColNullVoption

      - for: Option/In.sql
        params:
          param1:
            nullable: true
            type: NVARCHAR(50)

      - for: Option/Out.sql
        params:
          param1:
            nullable: true
            type: NVARCHAR(50)

      - for: Option/TvpInOut.sql
        params:
          tvp:
            type: dbo.MultiColNull

      - for: SingleRecordCol.sql
        recordIfSingleCol: true

      - for: OverriddenDtoParamName.sql
        params:
          nameToBeOverridden:
            type: INT
            dtoName: newDtoParamName

      - for: DynamicSqlWithoutDeclaration.sql
        params:
          col1Filter:
            type: NVARCHAR(42)

      - for: DynamicSqlSensitiveToParamValues.sql
        params:
          orderBy:
            buildValue: TableCol1

      - for: DynamicSqlWithStringSplitParam.sql
        params:
          splitParam:
            type: NVARCHAR(100)

      - for: DynamicSqlWithTvp.sql
        params:
          tvp:
            type: dbo.SingleColNonNull

      - for: ManyColumns.sql

      - for: TempTableAllTypesNonNull.sql
        tempTables:
          - definition: TempTableDefinitions/TempTableAllTypesNonNull.sql

      - for: TempTableAllTypesNull.sql
        tempTables:
          - definition: TempTableDefinitions/TempTableAllTypesNull.sql

      - for: TempTableAllTypesNullVoption.sql
        voptionIn: true
        tempTables:
          - definition: TempTableDefinitions/TempTableAllTypesNull.sql

      - for: TempTableInlined.sql
        tempTables:
            # Deliberately uses the same temp table name as at least one other script to
            # ensure temp tables are dropped when parsing
          - definition: "CREATE TABLE #tempTableInlined (Col1 INT NOT NULL, Col2 NVARCHAR(42) NULL)"

      - for: TempTableInlinedDynamic.sql
        tempTables:
          - definition: "CREATE TABLE #tempTableInlined (Col1 INT NOT NULL, Col2 NVARCHAR(42) NULL)"

      - for: TempTableInlinedWithOtherParams.sql
        tempTables:
          - definition: "CREATE TABLE #tempTableInlined (Col1 INT NOT NULL, Col2 NVARCHAR(42) NULL)"

      - for: MultipleTempTables.sql
        tempTables:
          - definition: "CREATE TABLE #tempTable1 (Col1 INT NOT NULL, Col2 NVARCHAR(42) NULL)"
          - definition: "CREATE TABLE #tempTable2 (Col1 INT NOT NULL, Col3 NVARCHAR(42) NOT NULL)"

      - for: TempTableWithLengthTypes.sql
        tempTables:
          - definition: |
              CREATE TABLE #tempTableWithLengthTypes (
                [binary] BINARY(3) NOT NULL,
                [char] CHAR(3) NOT NULL,
                [nchar] NCHAR(3) NOT NULL,
                [nvarchar] NVARCHAR(3) NOT NULL,
                [varbinary] VARBINARY(3) NOT NULL,
                [varchar] VARCHAR(3) NOT NULL
              )

      - for: TempTableWithMaxLengthTypes.sql
        tempTables:
          - definition: |
              CREATE TABLE #tempTableWithMaxLengthTypes (
                [nvarchar] NVARCHAR(MAX) NOT NULL,
                [varbinary] VARBINARY(MAX) NOT NULL,
                [varchar] VARCHAR(MAX) NOT NULL
              )

      - for: NominalResult.sql
        result: nominal


    tableDtos:
      - include: .*
        except: WithoutDto

      - for: Voption
        voption: true

      - for: dbo\.TableWithSkippedUnsupportedColumn
        columns:
          UnsupportedCol:
            skip: true

      - for: TableDtoColumnInh.ritance
        columns:
          "":
            skip: true
          Col1:
            skip: false
          Col4:
            skip: false

      - for: TableDtoColumnInheritance
        columns:
          Col2:
            skip: false
          Col4:
            skip: true


    tableTypes:
      - for: Voption
        voption: true
